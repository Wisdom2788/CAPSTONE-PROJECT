<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="35" failures="0" errors="0" time="6.354">
  <testsuite name="UserDTO" errors="0" failures="0" skipped="0" timestamp="2025-10-09T12:10:22" time="2.278" tests="7">
    <testcase classname="UserDTO constructor should create a UserDTO instance with valid data" name="UserDTO constructor should create a UserDTO instance with valid data" time="0.016">
    </testcase>
    <testcase classname="UserDTO constructor should throw validation error for invalid email" name="UserDTO constructor should throw validation error for invalid email" time="0.05">
    </testcase>
    <testcase classname="UserDTO constructor should throw validation error for missing required fields" name="UserDTO constructor should throw validation error for missing required fields" time="0.003">
    </testcase>
    <testcase classname="UserDTO toPublicResponse should transform DTO to public response format" name="UserDTO toPublicResponse should transform DTO to public response format" time="0.008">
    </testcase>
    <testcase classname="UserDTO toProfileUpdate should transform DTO to profile update format" name="UserDTO toProfileUpdate should transform DTO to profile update format" time="0.002">
    </testcase>
    <testcase classname="UserDTO toRegistration should transform DTO to registration format" name="UserDTO toRegistration should transform DTO to registration format" time="0.003">
    </testcase>
    <testcase classname="UserDTO fromModel should create DTO from user model" name="UserDTO fromModel should create DTO from user model" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="BaseDTO" errors="0" failures="0" skipped="0" timestamp="2025-10-09T12:10:24" time="0.491" tests="20">
    <testcase classname="BaseDTO constructor should create a BaseDTO instance with empty data" name="BaseDTO constructor should create a BaseDTO instance with empty data" time="0.003">
    </testcase>
    <testcase classname="BaseDTO constructor should create a BaseDTO instance with initial data" name="BaseDTO constructor should create a BaseDTO instance with initial data" time="0.002">
    </testcase>
    <testcase classname="BaseDTO get should get data value by key" name="BaseDTO get should get data value by key" time="0.007">
    </testcase>
    <testcase classname="BaseDTO get should return undefined for non-existent key" name="BaseDTO get should return undefined for non-existent key" time="0.003">
    </testcase>
    <testcase classname="BaseDTO set should set data value by key" name="BaseDTO set should set data value by key" time="0.002">
    </testcase>
    <testcase classname="BaseDTO set should update existing key value" name="BaseDTO set should update existing key value" time="0.002">
    </testcase>
    <testcase classname="BaseDTO has should return true for existing key" name="BaseDTO has should return true for existing key" time="0.004">
    </testcase>
    <testcase classname="BaseDTO has should return false for non-existent key" name="BaseDTO has should return false for non-existent key" time="0.001">
    </testcase>
    <testcase classname="BaseDTO remove should remove key from data" name="BaseDTO remove should remove key from data" time="0.008">
    </testcase>
    <testcase classname="BaseDTO remove should not throw error when removing non-existent key" name="BaseDTO remove should not throw error when removing non-existent key" time="0.003">
    </testcase>
    <testcase classname="BaseDTO keys should return all data keys" name="BaseDTO keys should return all data keys" time="0.001">
    </testcase>
    <testcase classname="BaseDTO keys should return empty array for empty DTO" name="BaseDTO keys should return empty array for empty DTO" time="0.001">
    </testcase>
    <testcase classname="BaseDTO size should return correct data size" name="BaseDTO size should return correct data size" time="0.001">
    </testcase>
    <testcase classname="BaseDTO size should return 0 for empty DTO" name="BaseDTO size should return 0 for empty DTO" time="0.001">
    </testcase>
    <testcase classname="BaseDTO clear should clear all data" name="BaseDTO clear should clear all data" time="0.003">
    </testcase>
    <testcase classname="BaseDTO isEmpty should return true for empty DTO" name="BaseDTO isEmpty should return true for empty DTO" time="0.001">
    </testcase>
    <testcase classname="BaseDTO isEmpty should return false for non-empty DTO" name="BaseDTO isEmpty should return false for non-empty DTO" time="0.001">
    </testcase>
    <testcase classname="BaseDTO toObject should return plain object representation" name="BaseDTO toObject should return plain object representation" time="0.002">
    </testcase>
    <testcase classname="BaseDTO toObject should return empty object for empty DTO" name="BaseDTO toObject should return empty object for empty DTO" time="0.004">
    </testcase>
    <testcase classname="BaseDTO toJSON should return JSON string representation" name="BaseDTO toJSON should return JSON string representation" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="UserService" errors="0" failures="0" skipped="0" timestamp="2025-10-09T12:10:22" time="3.917" tests="8">
    <testcase classname="UserService register should register a new user successfully" name="UserService register should register a new user successfully" time="0.011">
    </testcase>
    <testcase classname="UserService register should throw error when repository fails" name="UserService register should throw error when repository fails" time="0.02">
    </testcase>
    <testcase classname="UserService authenticate should authenticate user successfully" name="UserService authenticate should authenticate user successfully" time="0.004">
    </testcase>
    <testcase classname="UserService authenticate should throw error for invalid credentials" name="UserService authenticate should throw error for invalid credentials" time="0.017">
    </testcase>
    <testcase classname="UserService authenticate should throw error for incorrect password" name="UserService authenticate should throw error for incorrect password" time="0.001">
    </testcase>
    <testcase classname="UserService authenticate should throw error for inactive account" name="UserService authenticate should throw error for inactive account" time="0.001">
    </testcase>
    <testcase classname="UserService updateProfile should update user profile successfully" name="UserService updateProfile should update user profile successfully" time="0.002">
    </testcase>
    <testcase classname="UserService updateProfile should return null when user not found" name="UserService updateProfile should return null when user not found" time="0.001">
    </testcase>
  </testsuite>
</testsuites>